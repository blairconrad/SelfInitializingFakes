<Project>

  <Import Project="../Directory.Build.props" />

  <PropertyGroup>
    <TargetFrameworks>net452;netcoreapp1.0;netcoreapp2.0</TargetFrameworks>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)\SelfInitializingFakes.Tests.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\SelfInitializingFakes\SelfInitializingFakes.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.1" />
    <PackageReference Include="FluentAssertions" Version="5.10.0" />
    <PackageReference Include="Fluentassertions.Analyzers" Version="0.11.4" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="3.1.0" />
    <PackageReference Include="Xbehave.Core" Version="2.4.1" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp1.0' ">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.4.0" />
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition=" $(AssemblyName.StartsWith(`SelfInitializingFakes.Tests.FIE.`)) ">
    <Compile Include="..\Acceptance\**\*.cs"><Link>Acceptance/%(Filename)%(Extension)</Link></Compile>
    <Compile Include="..\Conventions\**\*.cs"><Link>Conventions/%(Filename)%(Extension)</Link></Compile>
  </ItemGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp1.0' ">
    <DefineConstants>$(DefineConstants);FRAMEWORK_WEAK_TYPE_CLASS</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' != 'net452' ">
    <Compile Remove="..\Acceptance\BinarySerialization.cs" />
  </ItemGroup>

</Project>
